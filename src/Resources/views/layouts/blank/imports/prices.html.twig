{% block product_price_component %}
    {% if not is_configurable_product_type(product.type) or matrixFormType == 'none' %}
        {% set attr = layout_attr_defaults(attr, {
            'data-page-component-init-on': 'asap',
            'data-page-component-module': 'oroui/js/app/components/view-component',
            '~data-page-component-options': {
                view: 'oropricing/js/app/views/list-item-product-prices-view',
                frontendRealTimePricesEnabled: frontendRealTimePricesEnabled,
                showValuePrice: showValuePrice,
                showListedPrice: showListedPrice,
                modelAttr: {
                    prices: productPrices,
                }
            }
        }) %}
    {% endif %}
    {% if productPrices is not empty or forceComponentRender %}
        {% set attr = layout_attr_defaults(attr, {
            '~class': ' product-price__main'
        }) %}
        <div {{ block('block_attributes') }}>
            {{ block_widget(block) }}
        </div>
    {% else %}
        {{ block('product_price_not_found') }}
    {% endif %}
{% endblock %}

{% block product_price_listed %}
    {# Clone js logic in package/commerce/src/Oro/Bundle/PricingBundle/Resources/public/templates/product/list-item-product-prices.html #}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' product-price__listed'
    }) %}
    <div {{ block('block_attributes') }}>
        <span class="product-price__listed-label">{{ 'oro.pricing.frontend.pricelist.index.listed_price'|trans }}</span>
        {% set listedPrice = productPrices|first.list_price %}
        <span class="product-price__listed-box"
              title="{{ 'oro.pricing.productprice.applicable_from'|trans({'%amount%': listedPrice.quantity})|e('html_attr') }}">
            <span class="product-price__listed-value">{{ listedPrice.formatted_price }}</span>
            <span> / </span>
            <span class="product-price__unit">
                <span class="product-price__unit-full">
                    {{ listedPrice.formatted_unit }}
                </span>
                <span class="product-price__unit-short">
                    {{ listedPrice.unit|oro_format_short_product_unit_label }}
                </span>
            </span>
        </span>
    </div>
{% endblock %}

{% block product_price_flyer %}
    {# Clone js logic in package/commerce/src/Oro/Bundle/PricingBundle/Resources/public/templates/product/list-item-product-prices.html #}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' product-price__listed'
    }) %}
    <div {{ block('block_attributes') }}>
        <span class="product-price__listed-label">Flyer Price</span>
        {% set flyerPrice = productPrices|first.flyer_price %}
        <span class="product-price__listed-box">
            <span class="product-price__listed-value">{{ flyerPrice.formatted_price }}</span>
            <span> / </span>
            <span class="product-price__unit">
                <span class="product-price__unit-full">
                    {{ flyerPrice.formatted_unit }}
                </span>
                <span class="product-price__unit-short">
                    {{ flyerPrice.unit|oro_format_short_product_unit_label }}
                </span>
            </span>
        </span>
    </div>
{% endblock %}

{% block product_price_table %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' product-prices'
    }) %}

    {% if not is_configurable_product_type(product.type) or matrixFormType|default(false) == 'none' %}
        {# Use to modify quantity in case when it not enough quantity to show the price #}
        {# We use this component as single entry point for price extendability #}
        {% set attr = layout_attr_defaults(attr, {
            'data-page-component-module': 'oroui/js/app/components/view-component',
            '~data-page-component-options': {
                view: 'oropricing/js/app/views/list-item-product-prices-view',
                frontendRealTimePricesEnabled: frontendRealTimePricesEnabled,
                hasPricesTable: true,
                showValuePrice: false,
                showListedPrice: false,
                showHint: false,
                modelAttr: {
                    prices: productPrices,
                }
            },
        }) %}
    {% endif %}

    {% if productPrices is not empty %}
        <div {{ block('block_attributes') }}>
            <table class="product-prices__table">
                <thead class="product-prices__thead">
                <tr class="product-prices__tr">
                    <th style="width: 40%"
                        class="product-prices__th text-uppercase">{{ 'oro.pricing.frontend.product.quantity.short_label'|trans }}</th>{# qty #}
                    <th style="width: 60%"
                        class="product-prices__th">{{ 'oro.pricing.frontend.product.unit_price.long_label'|trans }}</th>{# Unit Price #}
                </tr>
                </thead>
                {{ block_widget(block) }}
            </table>
        </div>
    {% endif %}
{% endblock %}
